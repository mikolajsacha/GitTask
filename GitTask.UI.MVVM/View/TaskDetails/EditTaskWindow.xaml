<Window x:Class="GitTask.UI.MVVM.View.TaskDetails.EditTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:design="clr-namespace:GitTask.UI.MVVM.Design"
        xmlns:elements="clr-namespace:GitTask.UI.MVVM.View.Elements"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:prop="clr-namespace:GitTask.UI.MVVM.Properties"
        xmlns:taskDetails="clr-namespace:GitTask.UI.MVVM.View.TaskDetails"
        Title="{x:Static prop:Resources.EditTask}"
        Height="400"
        MinWidth="200"
        MinHeight="200"
        MaxWidth="600"
        d:DataContext="{d:DesignInstance Type=design:DesignAddTaskViewModel,
                                         IsDesignTimeCreatable=True}"
        SizeToContent="Width"
        WindowStartupLocation="CenterOwner"
        mc:Ignorable="d ignore">

    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Top" />
            <Setter Property="TextAlignment" Value="Left" />
            <Setter Property="Margin" Value="10" />
            <Setter Property="Padding" Value="10" />
        </Style>
        <Style x:Key="PriorityTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectTaskPriorityViewModel.TaskPriorityChosen}" Value="False">
                    <Setter Property="Text" Value="{x:Static prop:Resources.SelectPriority}" />
                    <Setter Property="FontStyle" Value="Italic" />
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectTaskPriorityViewModel.TaskPriorityChosen}" Value="True">
                    <Setter Property="Text" Value="{Binding SelectTaskPriorityViewModel.SelectedTaskPriority, Converter={StaticResource TaskPriorityToStringConverter}, Mode=OneWay}" />
                    <Setter Property="FontStyle" Value="Normal" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="TaskStateTextBlock" TargetType="TextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="False">
                    <Setter Property="Text" Value="{x:Static prop:Resources.SelectState}" />
                    <Setter Property="FontStyle" Value="Italic" />
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="True">
                    <Setter Property="Text" Value="{Binding SelectTaskStateViewModel.SelectedTaskState.Name, Mode=OneWay}" />
                    <Setter Property="FontStyle" Value="Normal" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="SelectedTaskStateColorRectangle" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="False">
                    <Setter Property="Background" Value="Transparent" />
                    <Setter Property="Visibility" Value="Hidden" />
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="True">
                    <Setter Property="Background" Value="{Binding SelectTaskStateViewModel.SelectedTaskState.Color, Mode=OneWay}" />
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <TextBlock Margin="10,0,0,0"
                           VerticalAlignment="Center"
                           FontSize="15"
                           FontWeight="SemiBold">
                    <Run Text="{x:Static prop:Resources.Title}" />
                    <Run Text=" " />
                    <Run Text="{Binding Title, Mode=OneWay}" />
                </TextBlock>
            </StackPanel>
            <Grid x:Name="SelectPriorityGrid"
                  Grid.Column="1"
                  Height="40"
                  Margin="10"
                  HorizontalAlignment="Right"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="SelectPriorityPopup">
                    <elements:SelectTaskPriorityPartial DataContext="{Binding SelectTaskPriorityViewModel, Mode=OneTime}" />
                </Popup>
                <Border Grid.Column="0"
                        Width="20"
                        Height="20"
                        Margin="5,2,5,0"
                        Background="{Binding SelectTaskPriorityViewModel.SelectedTaskPriority,
                                             Converter={StaticResource TaskPriorityToColorConverter},
                                             Mode=OneWay}"
                        CornerRadius="3" />
                <TextBlock Grid.Column="1"
                           Margin="10"
                           VerticalAlignment="Center"
                           FontSize="16"
                           FontWeight="SemiBold"
                           Style="{StaticResource PriorityTextBlock}"
                           TextAlignment="Center" />
            </Grid>
        </Grid>
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <TextBlock Margin="10,10,0,0"
                       VerticalAlignment="Center"
                       FontSize="15"
                       FontWeight="SemiBold"
                       Text="{x:Static prop:Resources.Content}" />
            <TextBox Height="200"
                     HorizontalAlignment="Stretch"
                     AcceptsReturn="True"
                     AcceptsTab="True"
                     Text="{Binding Content,
                                    Mode=TwoWay}"
                     TextWrapping="Wrap" />
        </StackPanel>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Popup x:Name="SelectAssignedMembersPopup" Grid.Column="0">
                <elements:SelectUsersPartial DataContext="{Binding SelectUsersViewModel, Mode=OneTime}" />
            </Popup>
            <Image Grid.Column="0"
                   Margin="10"
                   MouseDown="RemoveButton_MouseDown"
                   Source="../../Images/remove.png" />
            <TextBlock Grid.Column="1"
                       Margin="10"
                       VerticalAlignment="Center"
                       FontSize="16"
                       FontStyle="Italic"
                       FontWeight="SemiBold"
                       Text="{Binding Source={x:Static prop:Resources.AssignMembers}}"
                       TextAlignment="Right"
                       Visibility="{Binding SelectUsersViewModel.AnyUserChosen,
                                            Converter={StaticResource BoolToVisibilityReverseConverter}}" />
            <taskDetails:AssignedMembersInitialsList x:Name="AssignedMembersInitialsList"
                                                     Grid.Column="1"
                                                     DataContext="{Binding SelectUsersViewModel,
                                                                           Mode=OneTime}" />
            <Grid x:Name="SelectStateGrid"
                  Grid.Column="2"
                  Height="40"
                  Margin="10"
                  HorizontalAlignment="Right"
                  Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Popup x:Name="SelectStatePopup">
                    <StackPanel Orientation="Vertical">
                        <elements:SelectTaskStatePartial DataContext="{Binding SelectTaskStateViewModel, Mode=OneTime}" />
                        <Button Width="120"
                                Height="30"
                                Command="{Binding AddTaskStateCommand}"
                                Style="{StaticResource RoundedCornersButton}">
                            <TextBlock VerticalAlignment="Center"
                                       Text="{Binding Source={x:Static prop:Resources.AddTaskState},
                                                      Converter={StaticResource ToUpperCaseConverter}}"
                                       TextAlignment="Center" />
                        </Button>
                    </StackPanel>
                </Popup>
                <Border Grid.Column="0"
                        Width="20"
                        Height="20"
                        Margin="5,2,5,0"
                        CornerRadius="3"
                        Style="{StaticResource SelectedTaskStateColorRectangle}" />
                <TextBlock Grid.Column="1"
                           Margin="10"
                           VerticalAlignment="Center"
                           FontSize="16"
                           FontWeight="SemiBold"
                           Style="{StaticResource TaskStateTextBlock}"
                           TextAlignment="Center" />
            </Grid>
            <Button x:Name="OkButton"
                    Grid.Column="3"
                    Width="145"
                    Height="40"
                    Margin="10"
                    HorizontalAlignment="Right"
                    IsEnabled="{Binding IsOkButtonEnabled,
                                        Mode=OneWay}"
                    Style="{StaticResource RoundedCornersButton}">
                <TextBlock VerticalAlignment="Center"
                           FontSize="16"
                           FontWeight="SemiBold"
                           Text="{Binding Source={x:Static prop:Resources.SaveChanges},
                                          Converter={StaticResource ToUpperCaseConverter}}"
                           TextAlignment="Center" />
            </Button>
        </Grid>
    </Grid>
</Window>
