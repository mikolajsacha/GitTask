<Window x:Class="GitTask.UI.MVVM.View.TaskDetails.AddTaskWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:ignore="http://www.galasoft.ch/ignore"
        xmlns:prop="clr-namespace:GitTask.UI.MVVM.Properties"
        xmlns:elements="clr-namespace:GitTask.UI.MVVM.View.Elements"
        xmlns:taskDetails="clr-namespace:GitTask.UI.MVVM.View.TaskDetails"
        xmlns:design="clr-namespace:GitTask.UI.MVVM.Design"
        mc:Ignorable="d ignore"
        MinHeight="200"
        MinWidth="200"
        Height="400"
        SizeToContent="Width"
        MaxWidth="600"
        Title="{x:Static prop:Resources.AddTask}"
        d:DataContext="{d:DesignInstance Type=design:DesignAddTaskViewModel, IsDesignTimeCreatable=True}"
        DataContext="{Binding AddTaskViewModel, Source={StaticResource Locator}, Mode=OneWay}">

    <Window.Resources>
        <Style TargetType="TextBox">
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Top"/>
            <Setter Property="TextAlignment" Value="Left"/>
            <Setter Property="Margin" Value="10"/>
            <Setter Property="Padding" Value="10"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="PriorityTextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectTaskPriorityViewModel.TaskPriorityChosen}" Value="False">
                    <Setter Property="Text" Value="{x:Static prop:Resources.SelectPriority}"/>
                    <Setter Property="FontStyle" Value="Italic"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectTaskPriorityViewModel.TaskPriorityChosen}" Value="True">
                    <Setter Property="Text" Value="{Binding SelectTaskPriorityViewModel.SelectedTaskPriority, Converter={StaticResource TaskPriorityToStringConverter}, Mode=OneWay}"/>
                    <Setter Property="FontStyle" Value="Normal"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="TextBlock" x:Key="TaskStateTextBlock">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="False">
                    <Setter Property="Text" Value="{x:Static prop:Resources.SelectState}"/>
                    <Setter Property="FontStyle" Value="Italic"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="True">
                    <Setter Property="Text" Value="{Binding SelectTaskStateViewModel.SelectedTaskState.Name, Mode=OneWay}"/>
                    <Setter Property="FontStyle" Value="Normal"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Border" x:Key="SelectedTaskStateColorRectangle">
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="False">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="Visibility" Value="Hidden"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectTaskStateViewModel.TaskStateChosen}" Value="True">
                    <Setter Property="Background" Value="{Binding SelectTaskStateViewModel.SelectedTaskState.Color, Mode=OneWay}"/>
                    <Setter Property="Visibility" Value="Visible"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <TextBlock Text="{x:Static prop:Resources.Title}" VerticalAlignment="Center" FontSize="15" Margin="10,0,0,0" FontWeight="SemiBold"/>
                <TextBox HorizontalAlignment="Left" Width="200" Height="40" Text="{Binding Title, Mode=OneWayToSource}"/>
            </StackPanel>
            <Grid x:Name="SelectPriorityGrid" Grid.Column="1" HorizontalAlignment="Right" Height="40" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions >
                <Popup x:Name="SelectPriorityPopup">
                    <elements:SelectTaskPriorityPartial DataContext="{Binding SelectTaskPriorityViewModel, Mode=OneTime}"/>
                </Popup>
                <Border Grid.Column="0" Width="20" Height="20" CornerRadius="3" Margin="5,2,5,0"
                        Background="{Binding SelectTaskPriorityViewModel.SelectedTaskPriority, Converter={StaticResource TaskPriorityToColorConverter}, Mode=OneWay}"/>
                <TextBlock Grid.Column="1" Style="{StaticResource PriorityTextBlock}"
                           Margin="10" VerticalAlignment="Center" TextAlignment="Center" FontWeight="SemiBold" FontSize="16"/>
            </Grid>
        </Grid>
        <StackPanel Grid.Row="1" Orientation="Vertical">
            <TextBlock Text="{x:Static prop:Resources.Content}" VerticalAlignment="Center" FontSize="15" Margin="10,10,0,0" FontWeight="SemiBold"/>
            <TextBox HorizontalAlignment="Stretch" Height="200" TextWrapping="Wrap" Text="{Binding Content, Mode=OneWayToSource}" AcceptsReturn="True" AcceptsTab="True" />
        </StackPanel>
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Popup Grid.Column="0" x:Name="SelectAssignedMembersPopup">
                <elements:SelectUsersPartial DataContext="{Binding SelectUsersViewModel, Mode=OneTime}"/>
            </Popup>
            <TextBlock Grid.Column="0" Margin="10" TextAlignment="Right" VerticalAlignment="Center" FontWeight="SemiBold" FontSize="16"
                       Text="{Binding Source={x:Static prop:Resources.AssignMembers}}" FontStyle="Italic"
                       Visibility="{Binding SelectUsersViewModel.AnyUserChosen, Converter={StaticResource BoolToVisibilityReverseConverter}}"/>
            <taskDetails:AssignedMembersInitialsList Grid.Column="0" DataContext="{Binding SelectUsersViewModel, Mode=OneTime}"
                                                     MouseEnter="AssignedMembersInitialsList_OnMouseEnter"
                                                     MouseLeave="AssignedMembersInitialsList_OnMouseLeave"/>
            <Grid x:Name="SelectStateGrid" Grid.Column="1" HorizontalAlignment="Right" Height="40" Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="SelectStatePopup">
                    <StackPanel Orientation="Vertical">
                        <elements:SelectTaskStatePartial DataContext="{Binding SelectTaskStateViewModel, Mode=OneTime}"/>
                        <Button Style="{StaticResource RoundedCornersButton}" Width="120" Height="30" Command="{Binding AddTaskStateCommand}">
                            <TextBlock Text="{Binding Source={x:Static prop:Resources.AddTaskState}, Converter={StaticResource ToUpperCaseConverter}}"
                                       VerticalAlignment="Center" TextAlignment="Center"/>
                        </Button>
                    </StackPanel>
                </Popup>
                <Border Style="{StaticResource SelectedTaskStateColorRectangle}" Grid.Column="0" Width="20" Height="20" CornerRadius="3" Margin="5,2,5,0"/>
                <TextBlock Grid.Column="1" Style="{StaticResource TaskStateTextBlock}"
                           Margin="10" VerticalAlignment="Center" TextAlignment="Center" FontWeight="SemiBold" FontSize="16"/>
            </Grid>
            <Button Grid.Column="2" x:Name="OkButton" Height="40" Width="145" Margin="10" HorizontalAlignment="Right"
                Style="{StaticResource RoundedCornersButton}" IsEnabled="{Binding IsOkButtonEnabled, Mode=OneWay}">
                <TextBlock Text="{Binding Source={x:Static prop:Resources.AddTask}, Converter={StaticResource ToUpperCaseConverter}}"
                       VerticalAlignment="Center" TextAlignment="Center" FontWeight="SemiBold" FontSize="16"/>
            </Button>
        </Grid>
    </Grid>
</Window>
